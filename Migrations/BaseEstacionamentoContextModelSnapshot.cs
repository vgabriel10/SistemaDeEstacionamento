// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeEstacionamento.Models.DAO;

#nullable disable

namespace SistemaDeEstacionamento.Migrations
{
    [DbContext(typeof(BaseEstacionamentoContext))]
    partial class BaseEstacionamentoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeEstacionamento.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Placa");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.TipoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposVeiculos");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.ValorVeiculo", b =>
                {
                    b.Property<int>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipo"));

                    b.Property<int>("Dia")
                        .HasColumnType("int");

                    b.Property<float?>("Promocao")
                        .HasColumnType("real");

                    b.Property<float>("ValorHora")
                        .HasColumnType("real");

                    b.HasKey("IdTipo");

                    b.ToTable("ValorVeiculo");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.Veiculo", b =>
                {
                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Placa");

                    b.HasIndex("IdTipo");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.Cliente", b =>
                {
                    b.HasOne("SistemaDeEstacionamento.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("Placa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.Veiculo", b =>
                {
                    b.HasOne("SistemaDeEstacionamento.Models.TipoVeiculo", "TipoVeiculo")
                        .WithMany()
                        .HasForeignKey("IdTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoVeiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
