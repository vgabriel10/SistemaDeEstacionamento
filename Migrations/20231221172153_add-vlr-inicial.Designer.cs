// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaDeEstacionamento.Models.DAO;

#nullable disable

namespace SistemaDeEstacionamento.Migrations
{
    [DbContext(typeof(BaseEstacionamentoContext))]
    [Migration("20231221172153_add-vlr-inicial")]
    partial class addvlrinicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaDeEstacionamento.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdVeiculo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdVeiculo");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.ClienteVeiculoValor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDePagamento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoVeiculo")
                        .HasColumnType("int");

                    b.Property<int?>("IdVeiculo")
                        .HasColumnType("int");

                    b.Property<string>("TempoEstacionado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ValorBruto")
                        .HasColumnType("real");

                    b.Property<float>("ValorTotal")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdTipoVeiculo");

                    b.HasIndex("IdVeiculo");

                    b.ToTable("ClientesVeiculosValores");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.TipoDia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposDias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Dia = "Domingo"
                        },
                        new
                        {
                            Id = 2,
                            Dia = "Segunda Feira"
                        },
                        new
                        {
                            Id = 3,
                            Dia = "Terça Feira"
                        },
                        new
                        {
                            Id = 4,
                            Dia = "Quarta Feira"
                        },
                        new
                        {
                            Id = 5,
                            Dia = "Quinta Feira"
                        },
                        new
                        {
                            Id = 6,
                            Dia = "Sexta Feira"
                        },
                        new
                        {
                            Id = 7,
                            Dia = "Sábado"
                        },
                        new
                        {
                            Id = 8,
                            Dia = "Feriado"
                        });
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.TipoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TiposVeiculos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Moto",
                            Situacao = true
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Carro",
                            Situacao = true
                        });
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.ValorVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdDia")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoVeiculo")
                        .HasColumnType("int");

                    b.Property<float?>("Promocao")
                        .HasColumnType("real");

                    b.Property<float>("ValorHora")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdDia");

                    b.HasIndex("IdTipoVeiculo");

                    b.ToTable("ValorVeiculo");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("HoraEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraSaida")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoDia")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoVeiculo")
                        .HasColumnType("int");

                    b.Property<string>("LocalEstacionado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoDia");

                    b.HasIndex("IdTipoVeiculo");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.Cliente", b =>
                {
                    b.HasOne("SistemaDeEstacionamento.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("IdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.ClienteVeiculoValor", b =>
                {
                    b.HasOne("SistemaDeEstacionamento.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeEstacionamento.Models.TipoVeiculo", "TipoVeiculo")
                        .WithMany()
                        .HasForeignKey("IdTipoVeiculo");

                    b.HasOne("SistemaDeEstacionamento.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("IdVeiculo");

                    b.Navigation("Cliente");

                    b.Navigation("TipoVeiculo");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.ValorVeiculo", b =>
                {
                    b.HasOne("SistemaDeEstacionamento.Models.TipoDia", "TipoDia")
                        .WithMany()
                        .HasForeignKey("IdDia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeEstacionamento.Models.TipoVeiculo", "TipoVeiculo")
                        .WithMany()
                        .HasForeignKey("IdTipoVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDia");

                    b.Navigation("TipoVeiculo");
                });

            modelBuilder.Entity("SistemaDeEstacionamento.Models.Veiculo", b =>
                {
                    b.HasOne("SistemaDeEstacionamento.Models.TipoDia", "TipoDia")
                        .WithMany()
                        .HasForeignKey("IdTipoDia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaDeEstacionamento.Models.TipoVeiculo", "TipoVeiculo")
                        .WithMany()
                        .HasForeignKey("IdTipoVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDia");

                    b.Navigation("TipoVeiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
